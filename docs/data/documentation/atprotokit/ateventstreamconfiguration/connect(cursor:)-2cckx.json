{"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"remoteSource":{"fileName":"ATEventStreamConfiguration.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L85"},"roleHeading":"Instance Method","required":true,"externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","title":"connect(cursor:)","role":"symbol","modules":[{"name":"ATProtoKit"}],"symbolKind":"method"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","interfaceLanguage":"swift"},"abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"defaultImplementationsSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"],"title":"ATEventStreamConfiguration Implementations"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of"},{"type":"text","text":" "},{"type":"text","text":"results. Optional."}],"type":"paragraph"}],"name":"cursor"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Normally, when connecting to the event stream, it will start from the first message the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"event stream gets. The client will always look at the last successful "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" "},{"text":"and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is higher than ","type":"text"},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after","type":"text"},{"type":"text","text":" "},{"text":"outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is within the server’s rollback window, the server will attempt to give the","type":"text"},{"text":" ","type":"text"},{"text":"client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message"},{"text":" ","type":"text"},{"text":"saying it’s too old, then sends the oldest message it has and continues the stream.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues"},{"type":"text","text":" "},{"text":"the stream.","type":"text"}]}]}]}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"navigatorTitle":[{"kind":"identifier","text":"ATEventStreamConfiguration"}],"title":"ATEventStreamConfiguration","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATEventStreamConfiguration","kind":"identifier"}],"abstract":[{"text":"The base protocol which all data stream-related classes conform to.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","type":"topic","url":"\/documentation\/atprotokit\/ateventstreamconfiguration"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"role":"symbol","type":"topic","title":"connect(cursor:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"defaultImplementations":1,"title":"connect(cursor:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","type":"topic","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","required":true},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png"}}}