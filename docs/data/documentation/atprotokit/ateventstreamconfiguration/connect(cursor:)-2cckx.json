{"kind":"symbol","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"variants":[{"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"defaultImplementationsSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"],"title":"ATEventStreamConfiguration Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The mark used to indicate the starting point for the next set of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"results. Optional."}],"type":"paragraph"}],"name":"cursor"}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the"},{"type":"text","text":" "},{"text":"event stream gets. The client will always look at the last successful ","type":"text"},{"type":"codeVoice","code":"sequencePosition"},{"text":" ","type":"text"},{"type":"text","text":"and stores it internally. However, the following can occur when "},{"type":"codeVoice","code":"cursor"},{"text":" is invloved:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"code":"sequencePosition","type":"codeVoice"},{"text":", the connection will close after","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outputting an error."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is within the server’s rollback window, the server will attempt to give the"},{"type":"text","text":" "},{"type":"text","text":"client all of the messages it might have missed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"text":" is outside of the rollback window, then the server will send an info message","type":"text"},{"text":" ","type":"text"},{"text":"saying it’s too old, then sends the oldest message it has and continues the stream.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"type":"codeVoice","code":"0"},{"type":"text","text":", then the server will send the oldest message it has and continues"},{"type":"text","text":" "},{"text":"the stream.","type":"text"}]}]}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","required":true,"symbolKind":"method","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L85","fileName":"ATEventStreamConfiguration.swift"},"roleHeading":"Instance Method","modules":[{"name":"ATProtoKit"}],"title":"connect(cursor:)"},"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","kind":"symbol","role":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"title":"connect(cursor:)"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"type":"topic","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","required":true,"kind":"symbol","role":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"title":"connect(cursor:)","defaultImplementations":1},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"title":"ATEventStreamConfiguration","navigatorTitle":[{"kind":"identifier","text":"ATEventStreamConfiguration"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATEventStreamConfiguration","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The base protocol which all data stream-related classes conform to."}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]}}}