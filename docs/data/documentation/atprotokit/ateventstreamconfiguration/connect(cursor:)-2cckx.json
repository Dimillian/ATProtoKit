{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The mark used to indicate the starting point for the next set of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"results. Optional."}]}],"name":"cursor"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Normally, when connecting to the event stream, it will start from the first message the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"event stream gets. The client will always look at the last successful "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" "},{"text":"and stores it internally. However, the following can occur when ","type":"text"},{"code":"cursor","type":"codeVoice"},{"text":" is invloved:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":", the connection will close after"},{"type":"text","text":" "},{"text":"outputting an error.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is within the server’s rollback window, the server will attempt to give the","type":"text"},{"text":" ","type":"text"},{"text":"client all of the messages it might have missed.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message"},{"text":" ","type":"text"},{"type":"text","text":"saying it’s too old, then sends the oldest message it has and continues the stream."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"text":", then the server will send the oldest message it has and continues","type":"text"},{"text":" ","type":"text"},{"text":"the stream.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx"},"kind":"symbol","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"defaultImplementationsSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"],"title":"ATEventStreamConfiguration Implementations"}],"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}],"roleHeading":"Instance Method","externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","title":"connect(cursor:)","required":true,"modules":[{"name":"ATProtoKit"}],"symbolKind":"method"},"references":{"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATEventStreamConfiguration"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATEventStreamConfiguration"}],"type":"topic","title":"ATEventStreamConfiguration","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","role":"symbol","abstract":[{"text":"The base protocol which all data stream-related classes conform to.","type":"text"}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"role":"symbol","type":"topic","kind":"symbol","required":true,"title":"connect(cursor:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","abstract":[{"text":"Connects the client to the event stream.","type":"text"}],"defaultImplementations":1,"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"title":"connect(cursor:)","type":"topic"}}}