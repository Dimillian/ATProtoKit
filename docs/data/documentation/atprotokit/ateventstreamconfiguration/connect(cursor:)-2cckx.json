{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}]}]},{"parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The mark used to indicate the starting point for the next set of"},{"text":" ","type":"text"},{"text":"results. Optional.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the"},{"text":" ","type":"text"},{"text":"event stream gets. The client will always look at the last successful ","type":"text"},{"type":"codeVoice","code":"sequencePosition"},{"type":"text","text":" "},{"text":"and stores it internally. However, the following can occur when ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is invloved:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is higher than ","type":"text"},{"code":"sequencePosition","type":"codeVoice"},{"text":", the connection will close after","type":"text"},{"type":"text","text":" "},{"type":"text","text":"outputting an error."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is within the server’s rollback window, the server will attempt to give the"},{"text":" ","type":"text"},{"text":"client all of the messages it might have missed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message"},{"text":" ","type":"text"},{"text":"saying it’s too old, then sends the oldest message it has and continues the stream.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"text":" is ","type":"text"},{"code":"0","type":"codeVoice"},{"text":", then the server will send the oldest message it has and continues","type":"text"},{"type":"text","text":" "},{"text":"the stream.","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"connect(cursor:)","required":true,"remoteSource":{"fileName":"ATEventStreamConfiguration.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Models\/Common\/ATEventStreamConfiguration\/ATEventStreamConfiguration.swift#L85"},"externalID":"s:10ATProtoKit26ATEventStreamConfigurationP7connect6cursorys5Int64VSg_tYaF","roleHeading":"Instance Method","modules":[{"name":"ATProtoKit"}],"symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5Int64V","text":"Int64","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}]},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx"]}],"defaultImplementationsSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"],"title":"ATEventStreamConfiguration Implementations"}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"type":"topic","title":"connect(cursor:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","kind":"symbol","required":true,"defaultImplementations":1,"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"title":"connect(cursor:)","type":"topic","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V","text":"Int64"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"}]},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"role":"symbol","abstract":[{"text":"The base protocol which all data stream-related classes conform to.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATEventStreamConfiguration","kind":"identifier"}],"url":"\/documentation\/atprotokit\/ateventstreamconfiguration","title":"ATEventStreamConfiguration","navigatorTitle":[{"kind":"identifier","text":"ATEventStreamConfiguration"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","kind":"symbol","type":"topic"}}}