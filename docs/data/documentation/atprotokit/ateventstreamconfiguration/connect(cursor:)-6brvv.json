{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv"},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","title":"connect(cursor:)","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol"},"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"text":"Int64","preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier"},{"kind":"text","text":"? = nil) "},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The mark used to indicate the starting point for the next set of results. Optional.","type":"text"}]}],"name":"cursor"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"type":"text","text":" "},{"code":"sequencePosition","type":"codeVoice"},{"text":" and stores it internally. However, the following can occur when ","type":"text"},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is invloved:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is higher than "},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":", the connection will close after outputting an error."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"cursor"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and"},{"text":" ","type":"text"},{"type":"text","text":"continues the stream."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"cursor"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"type":"text","text":", then the server will send the oldest message it has and continues the stream."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"url":"\/documentation\/atprotokit\/ateventstreamconfiguration","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATEventStreamConfiguration","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ATEventStreamConfiguration","abstract":[{"type":"text","text":"The base protocol which all data stream-related classes conform to."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","navigatorTitle":[{"text":"ATEventStreamConfiguration","kind":"identifier"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","role":"collection","abstract":[],"title":"ATProtoKit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-6brvv":{"title":"connect(cursor:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-6brvv","type":"topic","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-6brvv","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/connect(cursor:)-2cckx":{"type":"topic","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"kind":"symbol","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/connect(cursor:)-2cckx","title":"connect(cursor:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/connect(cursor:)-2cckx","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"}],"required":true,"defaultImplementations":1}}}