{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/receiveMessages()-347t2"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/receiveMessages()-r3ga"]]},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"receiveMessages"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will attempt to decode each of the messages that arrive from the event stream. All of the messages are in a "},{"type":"reference","identifier":"https:\/\/ipld.io\/docs\/codecs\/known\/dag-cbor\/","isActive":true},{"type":"text","text":" format and are decoded accordingly."}]}]}],"variants":[{"paths":["\/documentation\/atprotokit\/ateventstreamconfiguration\/receivemessages()-347t2"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"receiveMessages","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"modules":[{"name":"ATProtoKit"}],"extendedModule":"ATProtoKit","title":"receiveMessages()","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE15receiveMessagesyyYaF","remoteSource":{"fileName":"ATEventStreamConfigurationExtension.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L68"}},"abstract":[{"text":"Receives decoded messages and manages the sequence number.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/receiveMessages()-347t2":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveMessages"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/receiveMessages()-347t2","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/receivemessages()-347t2","type":"topic","title":"receiveMessages()","abstract":[{"text":"Receives decoded messages and manages the sequence number.","type":"text"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATEventStreamConfiguration","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ATEventStreamConfiguration"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration","url":"\/documentation\/atprotokit\/ateventstreamconfiguration","kind":"symbol","title":"ATEventStreamConfiguration","abstract":[{"type":"text","text":"The base protocol which all data stream-related classes conform to."}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATEventStreamConfiguration/receiveMessages()-r3ga":{"required":true,"defaultImplementations":1,"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"receiveMessages"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATEventStreamConfiguration\/receiveMessages()-r3ga","url":"\/documentation\/atprotokit\/ateventstreamconfiguration\/receivemessages()-r3ga","kind":"symbol","type":"topic","abstract":[{"text":"Receives decoded messages and manages the sequence number.","type":"text"}],"title":"receiveMessages()"},"atprotokit_logo.png":{"type":"image","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","url":"\/documentation\/atprotokit","role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"https://ipld.io/docs/codecs/known/dag-cbor/":{"titleInlineContent":[{"text":"DAG-CBOR","type":"text"}],"identifier":"https:\/\/ipld.io\/docs\/codecs\/known\/dag-cbor\/","url":"https:\/\/ipld.io\/docs\/codecs\/known\/dag-cbor\/","type":"link","title":"DAG-CBOR"}}}