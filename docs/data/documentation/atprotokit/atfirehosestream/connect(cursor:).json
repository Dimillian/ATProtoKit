{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"cursor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"text":"? = nil) ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"cursor","content":[{"type":"paragraph","inlineContent":[{"text":"The mark used to indicate the starting point for the next set of results. Optional.","type":"text"}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Normally, when connecting to the event stream, it will start from the first message the event stream gets. The client will always look at the last successful"},{"text":" ","type":"text"},{"code":"sequencePosition","type":"codeVoice"},{"type":"text","text":" and stores it internally. However, the following can occur when "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is invloved:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is higher than "},{"type":"codeVoice","code":"sequencePosition"},{"text":", the connection will close after outputting an error.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"cursor","type":"codeVoice"},{"type":"text","text":"is within the server’s rollback window, the server will attempt to give the client all of the messages it might have missed."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is outside of the rollback window, then the server will send an info message saying it’s too old, then sends the oldest message it has and"},{"type":"text","text":" "},{"type":"text","text":"continues the stream."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"cursor","type":"codeVoice"},{"type":"text","text":" is "},{"code":"0","type":"codeVoice"},{"text":", then the server will send the oldest message it has and continues the stream.","type":"text"}]}]}]}]}],"kind":"symbol","metadata":{"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"ATProtoKit"}],"symbolKind":"method","title":"connect(cursor:)","extendedModule":"ATProtoKit","externalID":"s:10ATProtoKit26ATEventStreamConfigurationPAAE7connect6cursorys5Int64VSg_tYaF::SYNTHESIZED::s:10ATProtoKit16ATFirehoseStreamC","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cursor"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5Int64V","kind":"typeIdentifier","text":"Int64"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"}],"remoteSource":{"fileName":"ATEventStreamConfigurationExtension.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/APIReference\/ATEventStreamConfiguration\/ATEventStreamConfigurationExtension.swift#L24"}},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Connects the client to the event stream."}],"variants":[{"paths":["\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/ATEventStreamConfiguration-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/atfirehosestream\/ateventstreamconfiguration-implementations","kind":"article","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/ATEventStreamConfiguration-Implementations","role":"collectionGroup","title":"ATEventStreamConfiguration Implementations"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream/connect(cursor:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream\/connect(cursor:)","url":"\/documentation\/atprotokit\/atfirehosestream\/connect(cursor:)","type":"topic","abstract":[{"type":"text","text":"Connects the client to the event stream."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"connect"},{"text":"(","kind":"text"},{"text":"cursor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int64","kind":"typeIdentifier","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"async"}],"title":"connect(cursor:)","role":"symbol","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATFirehoseStream":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATFirehoseStream"}],"navigatorTitle":[{"kind":"identifier","text":"ATFirehoseStream"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATFirehoseStream","url":"\/documentation\/atprotokit\/atfirehosestream","kind":"symbol","title":"ATFirehoseStream","type":"topic","abstract":[{"text":"The base class for Bluesky’s Firehose event stream.","type":"text"}]},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","url":"\/documentation\/atprotokit","role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"}}}