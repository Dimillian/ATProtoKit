{"variants":[{"paths":["\/documentation\/atprotokit\/atrecordprotocol\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"init(from:)","modules":[{"name":"ATProtoKit"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"init","required":true,"externalID":"s:10ATProtoKit16ATRecordProtocolP4fromxs7Decoder_p_tKcfc","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L65"},"role":"symbol","roleHeading":"Initializer"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"override"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"inlineContent":[{"type":"text","text":"The decoder to read data from."}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer mirrors the one from "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":", but is needed to help make the"},{"text":" ","type":"text"},{"text":"polymorphic decoding work.","type":"text"}]},{"name":"Throws","type":"aside","content":[{"inlineContent":[{"text":"An error is thrown if reading from the decoder fails, or if the data","type":"text"},{"type":"text","text":" "},{"type":"text","text":"read is corrupted or otherwise invalid."}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol","type":"topic","title":"ATRecordProtocol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol/init(from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol\/init(from:)","abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder."}],"title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"required":true,"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol\/init(from:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","title":"ATProtoKit","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png"}}}