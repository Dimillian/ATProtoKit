{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"The Namespaced Identifier (NSID) of the record."}],"type":"paragraph"}]},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", which conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"While ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" allows for polymorphic handling via "},{"type":"codeVoice","code":"enum"},{"text":"s, it has a limitation where it","type":"text"},{"text":" ","type":"text"},{"text":"can’t directly decode or encode ","type":"text"},{"type":"codeVoice","code":"protocol"},{"type":"text","text":"s. This method circumvents this limitation by"},{"type":"text","text":" "},{"text":"decoding the object directly and returning the result. To ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", this is not a"},{"type":"text","text":" "},{"code":"protocol","type":"codeVoice"},{"text":", but a normal object.","type":"text"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error can occur if one if the following happens:"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"type":"text","text":" "},{"text":"- no object key in ","type":"text"},{"type":"codeVoice","code":"recordRegistry"},{"text":" matches the ","type":"text"},{"code":"$type","type":"codeVoice"},{"type":"text","text":"’s value."}]}],"name":"Throws","type":"aside"}]}],"abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"text":"and decoder.","type":"text"}],"kind":"symbol","metadata":{"modules":[{"name":"ATProtoKit"}],"title":"createInstance(ofType:from:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier","text":"ATRecordProtocol"},{"text":"?","kind":"text"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L127"},"roleHeading":"Type Method","externalID":"s:10ATProtoKit20ATRecordTypeRegistryV14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","symbolKind":"method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"title":"ATRecordTypeRegistry","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordTypeRegistry"}],"abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"title":"createInstance(ofType:from:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and decoder."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"title":"ATRecordProtocol","role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol"}}}