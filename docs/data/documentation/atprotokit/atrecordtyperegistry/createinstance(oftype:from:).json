{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":"?"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}],"name":"decoder"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":" or "},{"code":"class","type":"codeVoice"},{"text":", which conforms to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"While ","type":"text"},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" allows for polymorphic handling via "},{"type":"codeVoice","code":"enum"},{"text":"s, it has a limitation where it","type":"text"},{"type":"text","text":" "},{"text":"can’t directly decode or encode ","type":"text"},{"code":"protocol","type":"codeVoice"},{"text":"s. This method circumvents this limitation by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"type":"codeVoice","code":"Codable"},{"text":", this is not a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":", but a normal object."}],"type":"paragraph"},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"type":"text","text":"\n"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"type":"text","text":" "},{"type":"text","text":"- no object key in "},{"code":"recordRegistry","type":"codeVoice"},{"type":"text","text":" matches the "},{"type":"codeVoice","code":"$type"},{"type":"text","text":"’s value."}]}],"type":"aside"}]}],"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"createInstance(ofType:from:)","role":"symbol","symbolKind":"method","externalID":"s:10ATProtoKit20ATRecordTypeRegistryV14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","modules":[{"name":"ATProtoKit"}],"roleHeading":"Type Method"},"abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"text":" ","type":"text"},{"type":"text","text":"and decoder."}],"references":{"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","role":"collection","title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and decoder."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","type":"topic","title":"createInstance(ofType:from:)","role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"title":"ATRecordProtocol","role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ATRecordTypeRegistry"}],"title":"ATRecordTypeRegistry","role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordtyperegistry","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}]}}}