{"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"text":" ","type":"text"},{"text":"and decoder.","type":"text"}],"metadata":{"symbolKind":"method","modules":[{"name":"ATProtoKit"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L127"},"title":"createInstance(ofType:from:)","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":"?","kind":"text"}],"externalID":"s:10ATProtoKit20ATRecordTypeRegistryV14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The decoder to read data from.","type":"text"}]}],"name":"decoder"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A "},{"code":"struct","type":"codeVoice"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"class"},{"type":"text","text":", which conforms to "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"While ","type":"text"},{"type":"codeVoice","code":"Codable"},{"type":"text","text":" allows for polymorphic handling via "},{"type":"codeVoice","code":"enum"},{"type":"text","text":"s, it has a limitation where it"},{"text":" ","type":"text"},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"text":"s. This method circumvents this limitation by","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decoding the object directly and returning the result. To "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", this is not a"},{"text":" ","type":"text"},{"code":"protocol","type":"codeVoice"},{"type":"text","text":", but a normal object."}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error can occur if one if the following happens:"},{"text":"\n","type":"text"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"type":"text","text":" "},{"text":"- no object key in ","type":"text"},{"type":"codeVoice","code":"recordRegistry"},{"type":"text","text":" matches the "},{"code":"$type","type":"codeVoice"},{"text":"’s value.","type":"text"}]}],"name":"Throws","style":"note"}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"title":"ATRecordTypeRegistry","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordTypeRegistry"}],"navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","role":"symbol","type":"topic","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"title":"ATRecordProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol","kind":"symbol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"text":"and decoder.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","type":"topic","title":"createInstance(ofType:from:)"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","kind":"symbol"}}}