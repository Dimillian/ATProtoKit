{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"ATProtoKit"}],"role":"symbol","title":"createInstance(ofType:from:)","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L125"},"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":"?","kind":"text"}],"externalID":"s:10ATProtoKit20ATRecordTypeRegistryV14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","symbolKind":"method","roleHeading":"Type Method"},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}],"type":"paragraph"}]},{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" or "},{"code":"class","type":"codeVoice"},{"type":"text","text":", which conforms to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"While ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" allows for polymorphic handling via ","type":"text"},{"type":"codeVoice","code":"enum"},{"text":"s, it has a limitation where it","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"type":"text","text":"s. This method circumvents this limitation by"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", this is not a"},{"type":"text","text":" "},{"type":"codeVoice","code":"protocol"},{"text":", but a normal object.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error can occur if one if the following happens:"},{"text":"\n","type":"text"},{"text":"- reading from the decoder fails","type":"text"},{"text":"\n","type":"text"},{"type":"text","text":"- the data read is corrupted or otherwise invalid"},{"type":"text","text":" "},{"text":"- no object key in ","type":"text"},{"code":"recordRegistry","type":"codeVoice"},{"type":"text","text":" matches the "},{"code":"$type","type":"codeVoice"},{"type":"text","text":"’s value."}]}],"name":"Throws","style":"note","type":"aside"}]}],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","kind":"symbol","title":"createInstance(ofType:from:)","role":"symbol","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createInstance"},{"kind":"text","text":"("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"role":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol","title":"ATRecordProtocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}]},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"url":"\/documentation\/atprotokit\/atrecordtyperegistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","title":"ATRecordTypeRegistry","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ATRecordTypeRegistry"}],"kind":"symbol","role":"symbol","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"type":"topic"}}}