{"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"abstract":[{"text":"Attempts to create an instance of a record type based on the provided NSID string","type":"text"},{"text":" ","type":"text"},{"text":"and decoder.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"createInstance","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decoder","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier","text":"ATRecordProtocol"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The Namespaced Identifier (NSID) of the record.","type":"text"}]}],"name":"type"},{"name":"decoder","content":[{"inlineContent":[{"text":"The decoder to read data from.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"struct"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"class"},{"text":", which conforms to ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"While "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" allows for polymorphic handling via "},{"code":"enum","type":"codeVoice"},{"type":"text","text":"s, it has a limitation where it"},{"type":"text","text":" "},{"type":"text","text":"can’t directly decode or encode "},{"type":"codeVoice","code":"protocol"},{"text":"s. This method circumvents this limitation by","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decoding the object directly and returning the result. To "},{"code":"Codable","type":"codeVoice"},{"text":", this is not a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"protocol"},{"text":", but a normal object.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"inlineContent":[{"text":"An error can occur if one if the following happens:","type":"text"},{"text":"\n","type":"text"},{"type":"text","text":"- reading from the decoder fails"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"text":" ","type":"text"},{"text":"- no object key in ","type":"text"},{"code":"recordRegistry","type":"codeVoice"},{"type":"text","text":" matches the "},{"code":"$type","type":"codeVoice"},{"text":"’s value.","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside"}],"kind":"content"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","interfaceLanguage":"swift"},"metadata":{"title":"createInstance(ofType:from:)","roleHeading":"Type Method","modules":[{"name":"ATProtoKit"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":"?","kind":"text"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L125"},"symbolKind":"method","externalID":"s:10ATProtoKit20ATRecordTypeRegistryV14createInstance02ofD04fromAA0C8Protocol_pSgSS_s7Decoder_ptKFZ","role":"symbol"},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"role":"symbol","title":"ATRecordTypeRegistry","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry","navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"title":"ATRecordProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}]},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/createInstance(ofType:from:)":{"role":"symbol","title":"createInstance(ofType:from:)","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/createinstance(oftype:from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/createInstance(ofType:from:)","abstract":[{"type":"text","text":"Attempts to create an instance of a record type based on the provided NSID string"},{"type":"text","text":" "},{"type":"text","text":"and decoder."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"createInstance"},{"text":"(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}}}