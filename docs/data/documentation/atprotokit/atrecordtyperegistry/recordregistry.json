{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recordRegistry"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Stores a mapping from NSID strings to corresponding record types.","type":"text"},{"type":"text","text":" "},{"text":"This contains a ","type":"text"},{"type":"codeVoice","code":"Dictionary"},{"text":", which contains the value of the ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":" property in the","type":"text"},{"type":"text","text":" "},{"text":"lexicon (which is used as the “key”), and the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"text":"-conforming ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"(which is used as the “value”). ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"text":" will search for the key that matches with","type":"text"},{"type":"text","text":" "},{"text":"the JSON object’s ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":" property, and then decode or encode the JSON object using the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":" that was found if there’s a match."}]}]}],"metadata":{"roleHeading":"Type Property","symbolKind":"property","externalID":"s:10ATProtoKit20ATRecordTypeRegistryV06recordE0SDySSAA0C8Protocol_pXpGvpZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recordRegistry"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : any "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"kind":"text","text":".Type]"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L93","fileName":"ATRecordProtocol.swift"},"modules":[{"name":"ATProtoKit"}],"title":"recordRegistry","role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"The registry itself."}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","interfaceLanguage":"swift"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","kind":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"role":"symbol","type":"topic","title":"ATRecordProtocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","type":"topic","images":[{"identifier":"atprotokit_logo.png","type":"icon"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry","kind":"symbol","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"role":"symbol","type":"topic","title":"ATRecordTypeRegistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"role":"symbol","abstract":[{"text":"The registry itself.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recordRegistry"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}],"title":"recordRegistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"title":"UnknownType","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","kind":"symbol"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png","type":"image"}}}