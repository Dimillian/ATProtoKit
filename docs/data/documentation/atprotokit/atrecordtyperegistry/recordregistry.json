{"metadata":{"role":"symbol","modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit20ATRecordTypeRegistryV06recordE0SDySSAA0C8Protocol_pXpGvpZ","roleHeading":"Type Property","remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L92"},"title":"recordRegistry","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol","kind":"typeIdentifier"},{"kind":"text","text":".Type]"}],"symbolKind":"property"},"variants":[{"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":".Type]"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Stores a mapping from NSID strings to corresponding record types.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This contains a "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":", which contains the value of the "},{"code":"$type","type":"codeVoice"},{"text":" property in the","type":"text"},{"text":" ","type":"text"},{"text":"lexicon (which is used as the “key”), and the ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"(which is used as the “value”). "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"text":" will search for the key that matches with","type":"text"},{"text":" ","type":"text"},{"text":"the JSON object’s ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":" property, and then decode or encode the JSON object using the","type":"text"},{"type":"text","text":" "},{"code":"struct","type":"codeVoice"},{"type":"text","text":" that was found if there’s a match."}],"type":"paragraph"}]}],"kind":"symbol","abstract":[{"type":"text","text":"The registry itself."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"role":"symbol","title":"recordRegistry","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","abstract":[{"type":"text","text":"The registry itself."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":".Type]","kind":"text"}]},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"title":"UnknownType","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/unknowntype","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"role":"symbol","title":"ATRecordTypeRegistry","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry","navigatorTitle":[{"text":"ATRecordTypeRegistry","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","abstract":[{"text":"A registry for all decodable record types in the AT Protocol.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATRecordTypeRegistry","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"title":"ATRecordProtocol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]}}}