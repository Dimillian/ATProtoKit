{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"text":"ATRecordProtocol","kind":"typeIdentifier","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Stores a mapping from NSID strings to corresponding record types."},{"type":"text","text":" "},{"type":"text","text":"This contains a "},{"code":"Dictionary","type":"codeVoice"},{"type":"text","text":", which contains the value of the "},{"code":"$type","type":"codeVoice"},{"type":"text","text":" property in the"},{"type":"text","text":" "},{"text":"lexicon (which is used as the “key”), and the ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(which is used as the “value”). "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"text":" will search for the key that matches with","type":"text"},{"text":" ","type":"text"},{"text":"the JSON object’s ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":" property, and then decode or encode the JSON object using the","type":"text"},{"type":"text","text":" "},{"code":"struct","type":"codeVoice"},{"text":" that was found if there’s a match.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recordRegistry"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}],"symbolKind":"property","modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit20ATRecordTypeRegistryV06recordE0SDySSAA0C8Protocol_pXpGvpZ","title":"recordRegistry","roleHeading":"Type Property","role":"symbol"},"abstract":[{"text":"The registry itself.","type":"text"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ATRecordTypeRegistry","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATRecordTypeRegistry"}],"type":"topic","title":"ATRecordTypeRegistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry","role":"symbol","abstract":[{"type":"text","text":"A registry for all decodable record types in the AT Protocol."}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"url":"\/documentation\/atprotokit\/atrecordprotocol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"role":"symbol","type":"topic","title":"ATRecordProtocol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"kind":"text","text":".Type]"}],"kind":"symbol","type":"topic","title":"recordRegistry","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","role":"symbol","abstract":[{"text":"The registry itself.","type":"text"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","title":"UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}]}}}