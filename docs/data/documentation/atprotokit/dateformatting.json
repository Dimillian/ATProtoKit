{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"seeAlsoSections":[{"title":"Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"type":"conformsTo","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"sections":[],"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"metadata":{"role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L101","fileName":"DateFormatting.swift"},"externalID":"s:10ATProtoKit14DateFormattingV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"ATProtoKit"}],"symbolKind":"struct","title":"DateFormatting","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"languages":["swift"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"code":"@DateFormatting","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property. It must be of type"},{"text":" ","type":"text"},{"type":"codeVoice","code":"var"},{"type":"text","text":" and can’t be an optional "},{"code":"Date","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["@DateFormatting public var indexedAt: Date"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}]},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}]},{"type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"code":"DateFormatting","type":"codeVoice"},{"text":" ","type":"text"},{"type":"text","text":"wrapper, using the underscored ("},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}]},{"code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"generated":true}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"url":"\/documentation\/atprotokit\/dateformatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"role":"symbol","title":"DateFormatting","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","title":"encode(to:)","type":"topic","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","abstract":[{"text":"Encodes the ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"title":"Encodable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","abstract":[],"role":"collectionGroup"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","type":"topic","role":"symbol","title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"}],"abstract":[{"text":"The actual ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value being wrapped.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","abstract":[{"type":"text","text":"Initializes the property with a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","kind":"symbol","title":"init(wrappedValue:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":")","kind":"text"}]},"doc://ATProtoKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"DateFormattingOptional","type":"topic","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}]},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","title":"init(from:)","type":"topic","kind":"symbol","abstract":[{"text":"Decodes a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","role":"collectionGroup","kind":"article","title":"@DateFormatting","type":"topic","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}]}}}