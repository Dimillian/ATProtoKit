{"metadata":{"role":"symbol","title":"DateFormatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L101"},"symbolKind":"struct","externalID":"s:10ATProtoKit14DateFormattingV","modules":[{"name":"ATProtoKit"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"kind":"symbol","identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"generated":true,"title":"Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"code":"var","type":"codeVoice"},{"text":" and can’t be an optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":":","type":"text"}]},{"type":"codeListing","code":["@DateFormatting public var indexedAt: Date"],"syntax":"swift"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":"’s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"text":" ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"type":"codeVoice","code":"DateFormatting"},{"type":"text","text":" "},{"type":"text","text":"wrapper, using the underscored ("},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}]},{"syntax":"swift","type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformatting"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","title":"Encodable Implementations","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","kind":"article","type":"topic"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"@DateFormatting","kind":"article","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"role":"collectionGroup","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"title":"encode(to:)","abstract":[{"type":"text","text":"Encodes the "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","type":"topic","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"title":"DateFormattingOptional"},"doc://ATProtoKit/Se":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"type":"topic","role":"symbol","title":"init(wrappedValue:)","kind":"symbol","abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":")"}],"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","role":"symbol","abstract":[{"type":"text","text":"The actual "},{"code":"Date","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","title":"wrappedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","kind":"symbol","title":"init(from:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","abstract":[{"text":"Decodes a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"kind":"symbol","title":"DateFormatting","url":"\/documentation\/atprotokit\/dateformatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}]}}}