{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"code":"var","type":"codeVoice"},{"text":" and can’t be an optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["@DateFormatting public var indexedAt: Date"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"],"syntax":"swift"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"wrappedValue","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"type":"codeVoice","code":"DateFormatting"},{"type":"text","text":" "},{"text":"wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}]},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"title":"Property Wrappers","generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"kind":"symbol","metadata":{"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","title":"DateFormatting","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L81","fileName":"DateFormatting.swift"},"externalID":"s:10ATProtoKit14DateFormattingV","role":"symbol","symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"references":{"atprotokit_logo.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"title":"DateFormattingOptional","kind":"symbol","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformattingoptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"abstract":[{"text":"Encodes the ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"title":"encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)"},"doc://ATProtoKit/Se":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" objects with the ISO8601 format.","type":"text"}],"kind":"symbol","title":"DateFormatting","url":"\/documentation\/atprotokit\/dateformatting","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"abstract":[{"type":"text","text":"Decodes a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"title":"init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"@DateFormatting","role":"collectionGroup","kind":"article","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}]},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","title":"wrappedValue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"}],"type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"The actual ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value being wrapped.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","role":"collection","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"abstract":[],"title":"Encodable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations"}}}