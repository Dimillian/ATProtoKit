{"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L101"},"title":"DateFormatting","modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit14DateFormattingV","role":"symbol","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"roleHeading":"Structure"},"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","seeAlsoSections":[{"title":"Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"code":"@DateFormatting","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"code":"var","type":"codeVoice"},{"type":"text","text":" and can’t be an optional "},{"code":"Date","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["@DateFormatting public var indexedAt: Date"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"text":", attempt to to decode each ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"]},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"code":"DateFormatting","type":"codeVoice"},{"type":"text","text":" "},{"text":"wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}]},{"type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformatting"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","type":"topic","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Encodes the ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"kind":"symbol","title":"encode(to:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"kind":"symbol","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"title":"DateFormattingOptional","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"type":"topic","title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","role":"symbol","kind":"symbol","abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting","title":"DateFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","type":"topic","kind":"symbol","abstract":[{"text":"Decodes a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" object from a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}]},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"role":"collection","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","kind":"symbol","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","role":"collectionGroup","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"kind":"article","title":"@DateFormatting"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"type":"topic","title":"Encodable Implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","role":"collectionGroup","kind":"article","abstract":[]},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"type":"topic","title":"wrappedValue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The actual "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value being wrapped."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"}]}}}