{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"platforms":["macOS"]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property. It must be of type","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"var"},{"text":" and can’t be an optional ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["@DateFormatting public var indexedAt: Date"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"]},{"inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"type":"codeVoice","code":"DateFormatting"},{"text":" ","type":"text"},{"type":"text","text":"wrapper, using the underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"metadata":{"title":"DateFormatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"role":"symbol","externalID":"s:10ATProtoKit14DateFormattingV","modules":[{"name":"ATProtoKit"}],"symbolKind":"struct"},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","url":"\/documentation\/atprotokit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"type":"topic","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","title":"DateFormatting","url":"\/documentation\/atprotokit\/dateformatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","kind":"article","type":"topic","role":"collectionGroup","title":"Encodable Implementations"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"type":"text","text":"Decodes a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","kind":"symbol","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"type":"topic","title":"encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","abstract":[{"text":"Encodes the ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object to a "},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","abstract":[{"type":"text","text":"Initializes the property with a "},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"title":"init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":")"}]},"atprotokit_logo.png":{"type":"image","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","role":"symbol","title":"wrappedValue","abstract":[{"type":"text","text":"The actual "},{"code":"Date","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"}],"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"}}}