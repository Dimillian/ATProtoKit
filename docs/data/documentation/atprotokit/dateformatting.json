{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"sections":[],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformatting"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"],"title":"Instance Properties"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"title":"Default Implementations"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormatting","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property. It must be of type"},{"text":" ","type":"text"},{"type":"codeVoice","code":"var"},{"text":" and can’t be an optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["@DateFormatting public var indexedAt: Date"]},{"inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"text":" to an underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":"’s "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"]},{"inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"type":"codeVoice","code":"DateFormatting"},{"text":" ","type":"text"},{"type":"text","text":"wrapper, using the underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}]}],"seeAlsoSections":[{"title":"Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"DateFormatting","externalID":"s:10ATProtoKit14DateFormattingV","role":"symbol","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"modules":[{"name":"ATProtoKit"}],"symbolKind":"struct","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L101"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Decodes a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" object from a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]},"atprotokit_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"kind":"article","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","title":"Encodable Implementations"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Initializes the property with a ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","title":"init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","title":"@DateFormatting"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","kind":"symbol","type":"topic","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The actual "},{"code":"Date","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}]},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"title":"DateFormatting","kind":"symbol","abstract":[{"text":"A property wrapper for encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"type":"topic","url":"\/documentation\/atprotokit\/dateformatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"kind":"symbol","type":"topic","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","title":"DateFormattingOptional","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Encodes the ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","title":"encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}}}