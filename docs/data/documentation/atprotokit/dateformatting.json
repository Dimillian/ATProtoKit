{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":", you first need to add it to a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property. It must be of type"},{"type":"text","text":" "},{"code":"var","type":"codeVoice"},{"text":" and can’t be an optional ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":":","type":"text"}]},{"type":"codeListing","code":["@DateFormatting public var indexedAt: Date"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of the property.:"}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"text":", attempt to to decode each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}]},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"type":"codeVoice","code":"DateFormatting"},{"text":" ","type":"text"},{"type":"text","text":"wrapper, using the underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"]}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"metadata":{"externalID":"s:10ATProtoKit14DateFormattingV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"modules":[{"name":"ATProtoKit"}],"role":"symbol","symbolKind":"struct","title":"DateFormatting","roleHeading":"Structure"},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"sections":[],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"init(from:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","abstract":[{"text":"Decodes a ","type":"text"},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}]},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initializes the property with a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value."}],"kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","role":"symbol","title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","abstract":[{"type":"text","text":"The actual "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" value being wrapped."}],"role":"symbol","title":"wrappedValue"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"url":"\/documentation\/atprotokit\/dateformatting","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"kind":"symbol","title":"DateFormatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","abstract":[{"text":"Encodes the ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"encode(to:)","type":"topic","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","role":"collection","url":"\/documentation\/atprotokit","type":"topic","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"title":"ATProtoKit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"}}}