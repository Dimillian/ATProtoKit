{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"type":"conformsTo","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/dateformatting"]}],"metadata":{"role":"symbol","modules":[{"name":"ATProtoKit"}],"title":"DateFormatting","symbolKind":"struct","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"externalID":"s:10ATProtoKit14DateFormattingV"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"When using "},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property. It must be of type"},{"text":" ","type":"text"},{"code":"var","type":"codeVoice"},{"text":" and can’t be an optional ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@DateFormatting public var indexedAt: Date"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormatting"},{"text":"’s ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Finally, for "},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property wrapped with","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":" is encoded using the custom encoding logic defined in the "},{"code":"DateFormatting","type":"codeVoice"},{"text":" ","type":"text"},{"text":"wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"}],"kind":"symbol","title":"wrappedValue","abstract":[{"text":"The actual ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" value being wrapped.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","title":"encode(to:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"text":"Encodes the ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"abstract":[{"type":"text","text":"Initializes the property with a "},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":")","kind":"text"}],"url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","title":"init(wrappedValue:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","title":"ATProtoKit","role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"type":"topic","abstract":[{"text":"Decodes a ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","title":"init(from:)","kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting\/init(from:)"},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","kind":"symbol","role":"symbol","title":"DateFormatting","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformatting"}}}