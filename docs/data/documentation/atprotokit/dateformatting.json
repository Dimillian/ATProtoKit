{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property. It must be of type","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"var"},{"type":"text","text":" and can’t be an optional "},{"type":"codeVoice","code":"Date"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@DateFormatting public var indexedAt: Date"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormatting(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormatting"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decode(DateFormatting.self, forKey: .indexedAt).wrappedValue","}"]},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"code":"@DateFormatting","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the ","type":"text"},{"type":"codeVoice","code":"DateFormatting"},{"text":" ","type":"text"},{"type":"text","text":"wrapper, using the underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}]},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encode(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"type":"conformsTo"}],"seeAlsoSections":[{"generated":true,"title":"Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"]}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformatting"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations"],"title":"Default Implementations","generated":true}],"metadata":{"role":"symbol","title":"DateFormatting","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L102"},"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"externalID":"s:10ATProtoKit14DateFormattingV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}]},"abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"kind":"symbol","references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/encode(to:)":{"role":"symbol","title":"encode(to:)","url":"\/documentation\/atprotokit\/dateformatting\/encode(to:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/encode(to:)","abstract":[{"type":"text","text":"Encodes the "},{"code":"Date","type":"codeVoice"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(from:)":{"url":"\/documentation\/atprotokit\/dateformatting\/init(from:)","kind":"symbol","title":"init(from:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(from:)","abstract":[{"type":"text","text":"Decodes a "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/wrappedValue":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/wrappedValue","title":"wrappedValue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"}],"url":"\/documentation\/atprotokit\/dateformatting\/wrappedvalue","role":"symbol","abstract":[{"text":"The actual ","type":"text"},{"type":"codeVoice","code":"Date"},{"type":"text","text":" value being wrapped."}]},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","url":"\/documentation\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/init(wrappedValue:)":{"role":"symbol","title":"init(wrappedValue:)","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/init(wrappedValue:)","url":"\/documentation\/atprotokit\/dateformatting\/init(wrappedvalue:)","abstract":[{"type":"text","text":"Initializes the property with a "},{"type":"codeVoice","code":"Date"},{"text":" value.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":")","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting/Encodable-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/dateformatting\/encodable-implementations","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting\/Encodable-Implementations","role":"collectionGroup","title":"Encodable Implementations","kind":"article"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"type":"topic","url":"\/documentation\/atprotokit\/dateformatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","kind":"article","title":"@DateFormatting","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"type":"topic","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","url":"\/documentation\/atprotokit\/dateformattingoptional","role":"symbol","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"title":"DateFormattingOptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","identifier":"atprotokit_logo.png"}}}