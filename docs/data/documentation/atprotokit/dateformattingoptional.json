{"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships"}],"metadata":{"externalID":"s:10ATProtoKit22DateFormattingOptionalV","title":"DateFormattingOptional","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"symbolKind":"struct"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" property:"}]},{"code":["@DateFormattingOptional public var indexedAt: Date?"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}]},{"code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"text":") version of the name of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"the property:"}]},{"syntax":"swift","type":"codeListing","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"title":"encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","abstract":[{"type":"text","text":"Encodes the optional "},{"code":"Date?","type":"codeVoice"},{"text":" object to a ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":","},{"text":" ","type":"text"},{"type":"text","text":"or encodes "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"text":"if ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","role":"collection","type":"topic","images":[{"identifier":"atprotokit_logo.png","type":"icon"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"kind":"symbol","title":"init(wrappedValue:)","abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" value.","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?)","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"kind":"symbol","title":"DateFormattingOptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"title":"Encodable Implementations","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","abstract":[]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"The optional "},{"code":"Date?","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue"}}}