{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"sections":[],"metadata":{"role":"symbol","roleHeading":"Structure","title":"DateFormattingOptional","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"modules":[{"name":"ATProtoKit"}],"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"symbolKind":"struct","externalID":"s:10ATProtoKit22DateFormattingOptionalV","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L184"}},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}]},{"type":"codeListing","code":["@DateFormattingOptional public var indexedAt: Date?"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"In "},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"code":"_","type":"codeVoice"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"type":"text","text":" "},{"code":"DateFormattingOptional","type":"codeVoice"},{"text":" wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of"},{"type":"text","text":" "},{"text":"the property:","type":"text"}]},{"code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"title":"Property Wrappers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true,"title":"Default Implementations"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformattingoptional","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","title":"DateFormattingOptional"},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","role":"collection","kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"role":"collectionGroup","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","abstract":[],"url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","title":"Encodable Implementations","kind":"article"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" value.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","title":"init(wrappedValue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"@DateFormatting","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","kind":"article","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","type":"topic"},"doc://ATProtoKit/s8SendableP":{"identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","abstract":[{"type":"text","text":"The optional "},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormatting"}],"type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/dateformatting","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"title":"DateFormatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" objects with the ISO8601 format."}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"role":"symbol","title":"encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","abstract":[{"text":"Encodes the optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or encodes "},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"type":"text","text":"if "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"abstract":[{"type":"text","text":"Decodes an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","title":"init(from:)"}}}