{"abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"metadata":{"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","externalID":"s:10ATProtoKit22DateFormattingOptionalV","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L184"},"modules":[{"name":"ATProtoKit"}],"title":"DateFormattingOptional","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":", you first need to add it to a "},{"code":"Date?","type":"codeVoice"},{"text":" property:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"]},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"text":" ","type":"text"},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property using"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"text":":","type":"text"}]},{"syntax":"swift","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Finally, for ","type":"text"},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of"},{"type":"text","text":" "},{"type":"text","text":"the property:"}]},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"generated":true,"title":"Property Wrappers"}],"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE","doc:\/\/ATProtoKit\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","type":"topic","abstract":[{"type":"text","text":"Encodes the optional "},{"code":"Date?","type":"codeVoice"},{"text":" object to a ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or encodes "},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"type":"text","text":"if "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": any "},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"encode(to:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"The optional "},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"title":"wrappedValue","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","title":"ATProtoKit","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" objects with the"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","title":"DateFormattingOptional","url":"\/documentation\/atprotokit\/dateformattingoptional","navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","type":"topic","abstract":[{"type":"text","text":"Convert dates to and from the ISO8601 format."}],"role":"collectionGroup","kind":"article","title":"@DateFormatting"},"doc://ATProtoKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/ATProtoKit\/s8SendableP","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"title":"init(wrappedValue:)","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?)"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","role":"symbol"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)","kind":"symbol","type":"topic","title":"init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DateFormatting","kind":"identifier"}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"url":"\/documentation\/atprotokit\/dateformatting"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"type":"topic","kind":"article","title":"Encodable Implementations","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations"},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"}}}