{"sections":[],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"]}],"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"externalID":"s:10ATProtoKit22DateFormattingOptionalV","title":"DateFormattingOptional","role":"symbol","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L152"},"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}],"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure"},"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true,"title":"Default Implementations"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Property Wrappers","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":", you first need to add it to a ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" property:","type":"text"}]},{"syntax":"swift","code":["@DateFormattingOptional public var indexedAt: Date?"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"code":"init()","type":"codeVoice"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"text":"of ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" to an underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}]},{"syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"type":"codeVoice","code":"Date"},{"text":" property using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":"â€™s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"]},{"inlineContent":[{"type":"text","text":"Finally, for "},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"type":"text","text":", ensure that each "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" property wrapped with"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of"},{"text":" ","type":"text"},{"type":"text","text":"the property:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional"},"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"url":"\/documentation\/atprotokit\/dateformatting","kind":"symbol","title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","title":"@DateFormatting","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","type":"topic","kind":"article","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}],"title":"DateFormattingOptional","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"kind":"symbol","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?)","kind":"text"}],"title":"init(wrappedValue:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","type":"topic","kind":"symbol","abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" value.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"title":"encode(to:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Encodes the optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object to a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"or encodes ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"if ","type":"text"},{"type":"codeVoice","code":"wrappedValue"},{"text":" is ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"to"},{"text":": ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","abstract":[],"kind":"article","role":"collectionGroup","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations","title":"Encodable Implementations"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"abstract":[{"type":"text","text":"Decodes an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"text":" using the ","type":"text"},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"type":"topic","title":"init(from:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","abstract":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"title":"wrappedValue","type":"topic"}}}