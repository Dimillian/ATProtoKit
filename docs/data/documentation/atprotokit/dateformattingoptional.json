{"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"],"generated":true}],"kind":"symbol","variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When using ","type":"text"},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":", you first need to add it to a ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}]},{"code":["@DateFormattingOptional public var indexedAt: Date?"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init()"},{"type":"text","text":", instead of initializing the property the standard way, you need to set the value"},{"type":"text","text":" "},{"type":"text","text":"of "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" to an underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of the property.:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"]},{"inlineContent":[{"text":"In ","type":"text"},{"code":"init(from decoder: Decoder) throws","type":"codeVoice"},{"text":", attempt to to decode each ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"text":"â€™s ","type":"text"},{"code":"wrappedValue","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, for "},{"type":"codeVoice","code":"encode(to encoder: Encoder)"},{"type":"text","text":", ensure that each "},{"code":"Date","type":"codeVoice"},{"type":"text","text":" property wrapped with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"text":" is encoded using the custom encoding logic defined in the","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"text":" wrapper, using the underscored (","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":") version of the name of"},{"type":"text","text":" "},{"type":"text","text":"the property:"}]},{"syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"],"type":"codeListing"}]}],"metadata":{"modules":[{"name":"ATProtoKit"}],"title":"DateFormattingOptional","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormattingOptional"}],"externalID":"s:10ATProtoKit22DateFormattingOptionalV","roleHeading":"Structure","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L151","fileName":"DateFormatting.swift"},"navigatorTitle":[{"text":"DateFormattingOptional","kind":"identifier"}]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Property Wrappers"}],"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" objects with the"},{"text":" ","type":"text"},{"type":"text","text":"ISO8601 format."}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"type":"topic","abstract":[{"type":"text","text":"The optional "},{"code":"Date?","type":"codeVoice"},{"text":" value being wrapped.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"wrappedValue","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue"},"doc://ATProtoKit/documentation/ATProtoKit":{"title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","role":"collection","url":"\/documentation\/atprotokit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}]},"doc://ATProtoKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"type":"topic","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","kind":"article","role":"collectionGroup","title":"Encodable Implementations","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"url":"\/documentation\/atprotokit\/dateformattingoptional","role":"symbol","title":"DateFormattingOptional","abstract":[{"type":"text","text":"A property wrapper for optionally encoding and decoding "},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ISO8601 format."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"type":"topic","abstract":[{"type":"text","text":"Decodes an optional "},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" object from a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" using the "},{"code":"CustomDateFormatter","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol","title":"init(from:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"title":"init(wrappedValue:)","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","abstract":[{"text":"Initializes the property with an optional ","type":"text"},{"code":"Date?","type":"codeVoice"},{"type":"text","text":" value."}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":"?)"}]},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"title":"DateFormatting","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DateFormatting","kind":"identifier"}],"navigatorTitle":[{"text":"DateFormatting","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","type":"topic","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"type":"text","text":" objects with the ISO8601 format."}],"url":"\/documentation\/atprotokit\/dateformatting","kind":"symbol","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"title":"@DateFormatting","role":"collectionGroup","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper","abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"kind":"article","type":"topic","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"type":"topic","abstract":[{"type":"text","text":"Encodes the optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object to a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or encodes "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"if "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol","title":"encode(to:)","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)"}}}