{"sections":[],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","interfaceLanguage":"swift"},"abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"code":"Date?","type":"codeVoice"},{"text":" objects with the","type":"text"},{"type":"text","text":" "},{"text":"ISO8601 format.","type":"text"}],"metadata":{"modules":[{"name":"ATProtoKit"}],"roleHeading":"Structure","title":"DateFormattingOptional","navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"externalID":"s:10ATProtoKit22DateFormattingOptionalV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DateFormattingOptional","kind":"identifier"}],"role":"symbol","symbolKind":"struct","remoteSource":{"fileName":"DateFormatting.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/DateFormatting.swift#L184"}},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations"]}],"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting"],"title":"Property Wrappers"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateFormattingOptional"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":", you first need to add it to a "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" property:"}]},{"code":["@DateFormattingOptional public var indexedAt: Date?"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"In ","type":"text"},{"code":"init()","type":"codeVoice"},{"text":", instead of initializing the property the standard way, you need to set the value","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":" to an underscored ("},{"code":"_","type":"codeVoice"},{"type":"text","text":") version of the name of the property.:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Incorrect method","self.indexedAt = indexedAt","","\/\/ Correct method","self._indexedAt = DateFormattingOptional(wrappedValue: indexedAt)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"init(from decoder: Decoder) throws"},{"type":"text","text":", attempt to to decode each "},{"code":"Date","type":"codeVoice"},{"text":" property using","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"@DateFormattingOptional"},{"type":"text","text":"â€™s "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":":"}]},{"type":"codeListing","code":["public init(from decoder: Decoder) throws {","    let container = try decoder.container(keyedBy: CodingKeys.self)","","    self.indexedAt = try container.decodeIfPresent(DateFormattingOptional.self, forKey: .indexedAt)?.wrappedValue","}"],"syntax":"swift"},{"inlineContent":[{"text":"Finally, for ","type":"text"},{"code":"encode(to encoder: Encoder)","type":"codeVoice"},{"text":", ensure that each ","type":"text"},{"type":"codeVoice","code":"Date"},{"text":" property wrapped with","type":"text"},{"type":"text","text":" "},{"code":"@DateFormattingOptional","type":"codeVoice"},{"type":"text","text":" is encoded using the custom encoding logic defined in the"},{"type":"text","text":" "},{"type":"codeVoice","code":"DateFormattingOptional"},{"type":"text","text":" wrapper, using the underscored ("},{"type":"codeVoice","code":"_"},{"text":") version of the name of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the property:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["public func encode(to encoder: Encoder) throws {","    var container = encoder.container(keyedBy: CodingKeys.self)","","    try container.encodeIfPresent(self._indexedAt, forKey: .indexedAt)","}"]}]}],"variants":[{"paths":["\/documentation\/atprotokit\/dateformattingoptional"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"]]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/encode(to:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP","text":"Encoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"title":"encode(to:)","abstract":[{"text":"Encodes the optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object to a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"or encodes "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" "},{"type":"text","text":"if "},{"code":"wrappedValue","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/encode(to:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/encode(to:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/wrappedValue":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/wrappedValue","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"text":"?","kind":"text"}],"abstract":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" value being wrapped.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/atprotokit\/dateformattingoptional\/wrappedvalue","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting":{"title":"DateFormatting","abstract":[{"type":"text","text":"A property wrapper for encoding and decoding "},{"type":"codeVoice","code":"Date"},{"text":" objects with the ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformatting","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DateFormatting"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormatting"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","role":"collection","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable","title":"Swift.Decodable"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormatting-PropertyWrapper":{"abstract":[{"text":"Convert dates to and from the ISO8601 format.","type":"text"}],"type":"topic","title":"@DateFormatting","url":"\/documentation\/atprotokit\/dateformatting-propertywrapper","role":"collectionGroup","kind":"article","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormatting-PropertyWrapper"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(wrappedValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","text":"Date","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"title":"init(wrappedValue:)","abstract":[{"type":"text","text":"Initializes the property with an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" value."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(wrappedValue:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/dateformattingoptional\/init(wrappedvalue:)"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/init(from:)":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/init(from:)","kind":"symbol","abstract":[{"type":"text","text":"Decodes an optional "},{"type":"codeVoice","code":"Date?"},{"type":"text","text":" object from a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" using the "},{"type":"codeVoice","code":"CustomDateFormatter"},{"type":"text","text":"."}],"role":"symbol","title":"init(from:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/dateformattingoptional\/init(from:)"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional","role":"symbol","type":"topic","title":"DateFormattingOptional","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DateFormattingOptional","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DateFormattingOptional"}],"kind":"symbol","abstract":[{"text":"A property wrapper for optionally encoding and decoding ","type":"text"},{"type":"codeVoice","code":"Date?"},{"text":" objects with the","type":"text"},{"text":" ","type":"text"},{"text":"ISO8601 format.","type":"text"}],"url":"\/documentation\/atprotokit\/dateformattingoptional"},"doc://ATProtoKit/documentation/ATProtoKit/DateFormattingOptional/Encodable-Implementations":{"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/DateFormattingOptional\/Encodable-Implementations","abstract":[],"kind":"article","role":"collectionGroup","title":"Encodable Implementations","url":"\/documentation\/atprotokit\/dateformattingoptional\/encodable-implementations"}}}