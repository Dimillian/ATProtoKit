{"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"article","modules":[{"name":"ATProtoKit"}],"title":"Retrieving Records with getRecord()","roleHeading":"Article"},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"],"title":"UnknownType","generated":true}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often. All records in ATProtoKit conform to "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"text":", and any lexicon models that have records as the value will have ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"type":"text","text":" as the value type. Typically speaking, when referencing a record, you would use "},{"code":"if case let","type":"codeVoice"},{"type":"text","text":" or "},{"code":"guard case let","type":"codeVoice"},{"text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To solve this problem, "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"text":" has a public method method, named ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","isActive":true},{"type":"text","text":". This will allow you to reference a record in one line."}]},{"level":2,"text":"Referencing a Record","type":"heading","anchor":"Referencing-a-Record"},{"type":"paragraph","inlineContent":[{"text":"You can call the method on a property that has ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"type":"text","text":" as the value type:"}]},{"type":"codeListing","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"syntax":"swift"},{"inlineContent":[{"text":"There’s one required parameter used tell the method which ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to decode the JSON response to. Make sure you add "},{"type":"codeVoice","code":".self"},{"text":" at the end of the name of the ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"type":"codeVoice","code":"getRecord()"},{"type":"text","text":". Uou can continue to chain the properties as normal."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","title":"ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"role":"symbol","kind":"symbol","title":"getRecord(ofType:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"url":"\/documentation\/atprotokit\/unknowntype","title":"UnknownType","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","kind":"symbol","type":"topic","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","title":"ATProtoKit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"kind":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"alt":"A technology icon representing the ATProtoKit framework."}}}