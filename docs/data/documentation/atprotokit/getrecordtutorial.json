{"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"type":"text","text":"Get records easily without explicit pattern matching in only one line."}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"],"title":"Related Documentation"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"],"generated":true,"title":"UnknownType"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often. All records in ATProtoKit conform to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":", and any lexicon models that have records as the value will have "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"type":"text","text":" as the value type. Typically speaking, when referencing a record, you would use "},{"type":"codeVoice","code":"if case let"},{"type":"text","text":" or "},{"code":"guard case let","type":"codeVoice"},{"type":"text","text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes."}]},{"inlineContent":[{"type":"text","text":"To solve this problem, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"type":"text","text":" has a public method method, named "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"reference","isActive":true},{"text":". This will allow you to reference a record in one line.","type":"text"}],"type":"paragraph"},{"anchor":"Referencing-a-Record","text":"Referencing a Record","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"You can call the method on a property that has "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"type":"text","text":" as the value type:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"code":"struct","type":"codeVoice"},{"text":" to decode the JSON response to. Make sure you add ","type":"text"},{"type":"codeVoice","code":".self"},{"text":" at the end of the name of the ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"type":"codeVoice","code":"getRecord()"},{"text":". You can continue to chain the properties as normal.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"},"metadata":{"role":"article","roleHeading":"Article","title":"Retrieving Records with getRecord()","modules":[{"name":"ATProtoKit"}]},"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","title":"getRecord(ofType:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRecord"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"title":"ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","title":"ATProtoKit","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"url":"\/documentation\/atprotokit\/unknowntype","role":"symbol","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"type":"topic","title":"UnknownType"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework."}}}