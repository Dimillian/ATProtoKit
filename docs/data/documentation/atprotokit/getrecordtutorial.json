{"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often. All records in ATProtoKit conform to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"type":"text","text":", and any lexicon models that have records as the value will have "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},{"text":" as the value type. Typically speaking, when referencing a record, you would use ","type":"text"},{"code":"if case let","type":"codeVoice"},{"type":"text","text":" or "},{"code":"guard case let","type":"codeVoice"},{"type":"text","text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To solve this problem, "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"text":" has a public method method, named ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"},{"type":"text","text":". This will allow you to reference a record in one line."}]},{"type":"heading","level":2,"anchor":"Referencing-a-Record","text":"Referencing a Record"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can call the method on a property that has "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true,"type":"reference"},{"type":"text","text":" as the value type:"}]},{"code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"type":"codeVoice","code":"struct"},{"type":"text","text":" to decode the JSON response to. Make sure you add "},{"type":"codeVoice","code":".self"},{"text":" at the end of the name of the ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"These are all of the requirements of "},{"code":"getRecord()","type":"codeVoice"},{"type":"text","text":". You can continue to chain the properties as normal."}],"type":"paragraph"}],"kind":"content"}],"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"],"title":"Related Documentation"},{"title":"UnknownType","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"Retrieving Records with getRecord()","modules":[{"name":"ATProtoKit"}],"roleHeading":"Article","role":"article"},"abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"references":{"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"topic","title":"getRecord(ofType:)","abstract":[{"text":"Attempts to retrieve a record of the specified type from an ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"text":" instance.","type":"text"}],"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"role":"symbol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"type":"topic","title":"UnknownType","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"url":"\/documentation\/atprotokit\/unknowntype","kind":"symbol","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit","kind":"symbol","type":"topic","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]}}}