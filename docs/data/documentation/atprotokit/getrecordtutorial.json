{"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Article","role":"article","title":"Retrieving Records with getRecord()","modules":[{"name":"ATProtoKit"}]},"abstract":[{"type":"text","text":"Get records easily without explicit pattern matching in only one line."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/getrecordtutorial"]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Records are one of the most important aspects of the AT Protocol, as it’s what allows you to create posts, likes, reposts, and more. As a result, you’ll be referencing them often. All records in ATProtoKit conform to "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"text":", and any lexicon models that have records as the value will have ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"text":" as the value type. Typically speaking, when referencing a record, you would use ","type":"text"},{"type":"codeVoice","code":"if case let"},{"type":"text","text":" or "},{"type":"codeVoice","code":"guard case let"},{"type":"text","text":", and then grab the results from there. However, doing this requires using multiple lines and handling different scopes."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To solve this problem, "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","type":"reference","isActive":true},{"type":"text","text":" has a public method method, named "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","type":"reference","isActive":true},{"text":". This will allow you to reference a record in one line.","type":"text"}],"type":"paragraph"},{"anchor":"Referencing-a-Record","text":"Referencing a Record","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can call the method on a property that has "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","isActive":true},{"text":" as the value type:","type":"text"}]},{"syntax":"swift","code":["do {","    let postArray = atProto.searchPosts(with: \"atprotokit\")","    let post = postArray.posts[0].record.getRecord(ofType: AppBskyLexicon.Feed.PostRecord.self).text","} catch {","    \/\/ error...","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s one required parameter used tell the method which "},{"code":"struct","type":"codeVoice"},{"type":"text","text":" to decode the JSON response to. Make sure you add "},{"code":".self","type":"codeVoice"},{"type":"text","text":" at the end of the name of the "},{"code":"struct","type":"codeVoice"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"These are all of the requirements of ","type":"text"},{"type":"codeVoice","code":"getRecord()"},{"type":"text","text":". You can continue to chain the properties as normal."}],"type":"paragraph"}]}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"title":"UnknownType","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","type":"topic","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","role":"collection","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"title":"ATProtoKit"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATRecordProtocol"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","title":"ATRecordProtocol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"abstract":[{"text":"Attempts to retrieve a record of the specified type from an ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" instance."}],"kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"getRecord(ofType:)","role":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"url":"\/documentation\/atprotokit\/unknowntype","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","title":"UnknownType","type":"topic","role":"symbol"}}}