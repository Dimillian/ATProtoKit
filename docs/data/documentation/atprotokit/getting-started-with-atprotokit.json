{"variants":[{"paths":["\/documentation\/atprotokit\/getting-started-with-atprotokit"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"images":[{"identifier":"bluesky_logo.png","type":"icon"}],"title":"Getting Started with ATProtoKit","color":{"standardColorIdentifier":"blue"},"role":"article","roleHeading":"Article","modules":[{"name":"ATProtoKit"}]},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"abstract":[{"type":"text","text":"Sign in with a Bluesky account, send a post, and view the account’s posts."}],"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat"],"generated":true}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/Getting-Started-with-ATProtoKit","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"ATProtoKit is designed to make it easy for you to interact with the AT Protocol and other services built on of the technology, such as Bluesky.","type":"text"}]},{"type":"heading","anchor":"Creating-a-session","level":3,"text":"Creating a session"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to log in, you need to create a session. To get started, create a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtocolConfiguration"},{"type":"text","text":" instance:"}]},{"syntax":"swift","code":["let config = ATProtocolConfiguration(handle: \"lucy.bsky.social\", appPassword: \"g8DBhaj-948uBho-Zh6c8Wl\")"],"type":"codeListing"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"Do not use the password you typically use for signing into Bluesky: only use a specific App Password that’s in use for this instance of ATProtoKit only. To generate an App Password, go to the Bluesky website, then go to Settings > Advanced > App Passwords and follow the instructions."}],"type":"paragraph"}],"name":"Important","style":"important"},{"type":"paragraph","inlineContent":[{"text":"Then, you can create a session with the ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtocolConfiguration\/authenticate(authenticationFactorToken:)","isActive":true,"type":"reference"},{"text":" method:","type":"text"}]},{"type":"codeListing","code":["Task {","    let session = try await config.authenticate()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"You can use a ","type":"text"},{"type":"codeVoice","code":"do-catch"},{"type":"text","text":" block to get the "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UserSession","type":"reference"},{"type":"text","text":" instance (if the session was successfully created) or handle the error (if an error occured):"}]},{"syntax":"swift","type":"codeListing","code":["let config = ATProtocolConfiguration(handle: \"lucy.bsky.social\", appPassword: \"hunter2\")","","Task {","    do {","        let session = try await config.authenticate()","","        \/\/ Handle the success.","    } catch {","        \/\/ Handle the error.","    }","}"]},{"name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"If you’ve enabled Two-Factor Authentication (via email), you may see an ","type":"text"},{"type":"codeVoice","code":"AuthFactorTokenRequired"},{"type":"text","text":" error. In that case, check your inbox for a code, then call "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtocolConfiguration\/authenticate(authenticationFactorToken:)"},{"text":" again, but put in the code for the ","type":"text"},{"type":"codeVoice","code":"authenticationFactorToken"},{"text":" parameter.","type":"text"}]}],"type":"aside"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UserSession","isActive":true},{"type":"text","text":" will contain, among other things, the access and refresh tokens. ATProtoKit abstracts this away for you so you don’t need to add it every time you use a method that requires an active session."}]},{"inlineContent":[{"type":"text","text":"You can then create an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKit"},{"type":"text","text":" instance, where you can insert the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UserSession"},{"text":" object in the ","type":"text"},{"code":"result","type":"codeVoice"},{"type":"text","text":" parameter:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let atProto = ATProtoKit(session: result)"]},{"level":3,"text":"Creating a post","type":"heading","anchor":"Creating-a-post"},{"inlineContent":[{"text":"To create a post, first create an ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky","isActive":true,"type":"reference"},{"text":" instance, with the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKit","isActive":true},{"text":" instance as the parameter:","type":"text"}],"type":"paragraph"},{"code":["let atProtoBluesky = ATProtoBluesky(atProtoKitInstance: atProto)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Then use the ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","isActive":true,"type":"reference"},{"type":"text","text":" method. While this method is extremely extensive, we’re only going to focus on the "},{"type":"codeVoice","code":"text"},{"text":" parameter.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let postResult = try await atProtoBluesky.createPostRecord(text: \"Hello Bluesky!\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You should see the post in your Bluesky account once you run this code. When the method successfully completes, you’ll receive a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ComAtprotoLexicon\/Repository\/StrongReference"},{"text":" object that contains the URI of the record (","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ComAtprotoLexicon\/Repository\/StrongReference\/recordURI","isActive":true},{"type":"text","text":") and the content identifier hash of the record ("},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ComAtprotoLexicon\/Repository\/StrongReference\/cidHash","isActive":true,"type":"reference"},{"type":"text","text":")."}]},{"inlineContent":[{"type":"text","text":"let atProtoBluesky = ATProtoBluesky(atProtoKitInstance: atProto)"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"let postResult = try await atProtoBluesky.createPostRecord(text: “Hello Bluesky!”)","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"print(postResult)","type":"text"}]}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBluesky":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ATProtoBluesky","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky","type":"topic","navigatorTitle":[{"text":"ATProtoBluesky","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atprotobluesky","role":"symbol","kind":"symbol","title":"ATProtoBluesky","abstract":[{"type":"text","text":"The base class that handles all direct Bluesky-related functionality of the ATProtoKit"},{"text":" ","type":"text"},{"text":"API library.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBlueskyChat":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoBlueskyChat"}],"navigatorTitle":[{"kind":"identifier","text":"ATProtoBlueskyChat"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBlueskyChat","url":"\/documentation\/atprotokit\/atprotoblueskychat","kind":"symbol","title":"ATProtoBlueskyChat","type":"topic","abstract":[{"text":"The base class that handles the the Bluesky chat functionality of the ATProtoKit API library.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoAdmin":{"title":"ATProtoAdmin","type":"topic","abstract":[{"text":"A class containing all administrator and moderator functionality of the ","type":"text"},{"type":"codeVoice","code":"ATProtoKit"},{"type":"text","text":" "},{"text":"API library.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoAdmin","url":"\/documentation\/atprotokit\/atprotoadmin","navigatorTitle":[{"text":"ATProtoAdmin","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATProtoAdmin"}]},"doc://ATProtoKit/documentation/ATProtoKit/ComAtprotoLexicon/Repository/StrongReference":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"StrongReference","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ComAtprotoLexicon\/Repository\/StrongReference","type":"topic","navigatorTitle":[{"text":"StrongReference","kind":"identifier"}],"url":"\/documentation\/atprotokit\/comatprotolexicon\/repository\/strongreference","role":"symbol","kind":"symbol","title":"ComAtprotoLexicon.Repository.StrongReference","abstract":[{"text":"A main data model definition for a strong reference.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoBluesky/createPostRecord(text:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createPostRecord","kind":"identifier"},{"text":"(","kind":"text"},{"text":"text","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"locales"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Locale","preciseIdentifier":"s:10Foundation6LocaleV"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"replyTo"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"text":"embed","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ATProtoBluesky","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit0A7BlueskyC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit0A7BlueskyC15EmbedIdentifierO","text":"EmbedIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"labels"},{"kind":"text","text":": "},{"text":"ATUnion","preciseIdentifier":"s:10ATProtoKit7ATUnionV","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"PostSelfLabelsUnion","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit7ATUnionV19PostSelfLabelsUnionO"},{"kind":"text","text":"?, "},{"text":"tags","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?, ","kind":"text"},{"text":"creationDate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Date","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"recordKey"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"text":"shouldValidate","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"swapCommit"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ComAtprotoLexicon","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconV"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Repository","preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconV10RepositoryV"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10ATProtoKit17ComAtprotoLexiconV10RepositoryV15StrongReferenceV","kind":"typeIdentifier","text":"StrongReference"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoBluesky\/createPostRecord(text:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","type":"topic","url":"\/documentation\/atprotokit\/atprotobluesky\/createpostrecord(text:locales:replyto:embed:labels:tags:creationdate:recordkey:shouldvalidate:swapcommit:)","role":"symbol","kind":"symbol","title":"createPostRecord(text:locales:replyTo:embed:labels:tags:creationDate:recordKey:shouldValidate:swapCommit:)","abstract":[{"type":"text","text":"Creates a post record to the user’s account."}]},"doc://ATProtoKit/documentation/ATProtoKit/ATProtocolConfiguration":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATProtocolConfiguration","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ATProtocolConfiguration"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtocolConfiguration","url":"\/documentation\/atprotokit\/atprotocolconfiguration","title":"ATProtocolConfiguration","kind":"symbol","abstract":[{"text":"Manages authentication and session operations for the a user account in the ATProtocol.","type":"text"}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtocolConfiguration/authenticate(authenticationFactorToken:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtocolConfiguration\/authenticate(authenticationFactorToken:)","url":"\/documentation\/atprotokit\/atprotocolconfiguration\/authenticate(authenticationfactortoken:)","title":"authenticate(authenticationFactorToken:)","role":"symbol","abstract":[{"type":"text","text":"Attempts to authenticate the user into the server."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"authenticate"},{"kind":"text","text":"("},{"text":"authenticationFactorToken","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"UserSession","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit11UserSessionV"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATProtoKit":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ATProtoKit","kind":"identifier"}],"role":"symbol","title":"ATProtoKit","navigatorTitle":[{"text":"ATProtoKit","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATProtoKit","abstract":[{"text":"The base class that handles the main functionality of the ","type":"text"},{"type":"codeVoice","code":"ATProtoKit"},{"type":"text","text":" API library."}],"type":"topic","url":"\/documentation\/atprotokit\/atprotokit"},"doc://ATProtoKit/documentation/ATProtoKit/ComAtprotoLexicon/Repository/StrongReference/recordURI":{"url":"\/documentation\/atprotokit\/comatprotolexicon\/repository\/strongreference\/recorduri","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ComAtprotoLexicon\/Repository\/StrongReference\/recordURI","kind":"symbol","abstract":[{"text":"The URI for the record.","type":"text"}],"type":"topic","title":"recordURI","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"recordURI","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://ATProtoKit/documentation/ATProtoKit/UserSession":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UserSession","abstract":[{"type":"text","text":"Represents an authenticated user session within the AT Protocol."}],"navigatorTitle":[{"text":"UserSession","kind":"identifier"}],"title":"UserSession","role":"symbol","url":"\/documentation\/atprotokit\/usersession","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserSession"}]},"bluesky_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/bluesky_logo.png"}],"type":"image","identifier":"bluesky_logo.png","alt":null},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"type":"topic","url":"\/documentation\/atprotokit","role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit"},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit/ComAtprotoLexicon/Repository/StrongReference/cidHash":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"cidHash","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"cidHash","abstract":[{"text":"The CID hash for the record.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/comatprotolexicon\/repository\/strongreference\/cidhash","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ComAtprotoLexicon\/Repository\/StrongReference\/cidHash"}}}