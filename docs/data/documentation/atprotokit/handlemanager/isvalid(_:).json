{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/handlemanager\/isvalid(_:)"]}],"metadata":{"modules":[{"name":"ATProtoKit"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isValid","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"remoteSource":{"fileName":"HandleManager.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATProtoIdentifiers\/HandleManager.swift#L108"},"role":"symbol","externalID":"s:10ATProtoKit13HandleManagerV7isValidySbSSF","title":"isValid(_:)","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/HandleManager"]]},"abstract":[{"text":"Indicates whether the handle is valid.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isValid"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"handle"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"handle","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The handle to validate."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the handle is valid, or "},{"code":"false","type":"codeVoice"},{"text":" if not.","type":"text"}]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/HandleManager\/isValid(_:)"},"sections":[],"references":{"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"type":"topic","title":"ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/documentation/ATProtoKit/HandleManager/isValid(_:)":{"title":"isValid(_:)","abstract":[{"type":"text","text":"Indicates whether the handle is valid."}],"url":"\/documentation\/atprotokit\/handlemanager\/isvalid(_:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/HandleManager\/isValid(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isValid"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/HandleManager":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HandleManager","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"HandleManager","kind":"identifier"}],"abstract":[{"text":"Identifies and validates handles.","type":"text"}],"title":"HandleManager","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/HandleManager","url":"\/documentation\/atprotokit\/handlemanager"}}}