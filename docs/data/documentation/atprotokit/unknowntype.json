{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","externalID":"s:10ATProtoKit11UnknownTypeO","symbolKind":"enum","roleHeading":"Enumeration","modules":[{"name":"ATProtoKit"}],"title":"UnknownType","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}]},"sections":[],"kind":"symbol","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"title":"Initializers","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/encode(to:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"title":"Conforms To","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Within the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"text":" ","type":"text"},{"code":"unknown","type":"codeVoice"},{"type":"text","text":" as dictated by the lexicon the "},{"code":"struct","type":"codeVoice"},{"text":"conforms to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"must","type":"text"}]},{"type":"text","text":" of this type. For example,"},{"text":" ","type":"text"},{"type":"text","text":"hereâ€™s the basic structure for "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification"},{"type":"text","text":":"}]},{"syntax":"swift","code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    @DateFormatting public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"As shown above, the ","type":"text"},{"type":"codeVoice","code":"records"},{"text":" property is of type ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":". By adding this, any "},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"text":" ","type":"text"},{"text":"within the dictionary of ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","isActive":true,"type":"reference"},{"text":"  can be used to potentially","type":"text"},{"text":" ","type":"text"},{"text":"decode and encode the JSON object.","type":"text"}]}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"type":"topic","role":"symbol","title":"UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"url":"\/documentation\/atprotokit\/unknowntype","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","type":"topic","abstract":[{"type":"text","text":"Represents a decoded "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"type":"text","text":"-conforming "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"record","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")"}],"title":"UnknownType.record(_:)"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"type":"topic","role":"symbol","title":"ATRecordProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","kind":"symbol"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","kind":"symbol","abstract":[{"type":"text","text":"Represents an unknown type."}],"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","title":"UnknownType.unknown(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"unknown","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/encode(to:)":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/encode(to:)","abstract":[{"text":"Encodes this instance into the given encoder.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/encode(to:)","title":"encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s7EncoderP","text":"Encoder","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"role":"collectionGroup","kind":"article","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","abstract":[],"title":"Encodable Implementations","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"},"doc://ATProtoKit/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/init(from:)":{"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)","abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" by attempting to decode a known record type or falling back"},{"text":" ","type":"text"},{"text":"to a raw dictionary.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/init(from:)","title":"init(from:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"text":"Decoder","kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"recordRegistry"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"text":".Type]","kind":"text"}],"abstract":[{"text":"The registry itself.","type":"text"}],"kind":"symbol","type":"topic","title":"recordRegistry","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"abstract":[{"type":"text","text":"A data model definition for a notification."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Notification","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","role":"symbol","navigatorTitle":[{"text":"Notification","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","title":"AppBskyLexicon.Notification.Notification"},"doc://ATProtoKit/documentation/ATProtoKit":{"role":"collection","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","title":"ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"type":"topic","images":[{"type":"icon","identifier":"atprotokit_logo.png"}]},"doc://ATProtoKit/SE":{"identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable","title":"Swift.Encodable"}}}