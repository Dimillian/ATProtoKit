{"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)"],"title":"Initializers"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/encode(to:)"],"title":"Instance Methods"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"metadata":{"role":"symbol","roleHeading":"Enumeration","externalID":"s:10ATProtoKit11UnknownTypeO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"symbolKind":"enum","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"modules":[{"name":"ATProtoKit"}],"title":"UnknownType"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"type":"text","text":" "},{"text":"representation.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Within the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"text":" ","type":"text"},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" as dictated by the lexicon the "},{"code":"struct","type":"codeVoice"},{"text":"conforms to ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"must","type":"text"}]},{"text":" of this type. For example,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hereâ€™s the basic structure for "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATNotification","type":"reference","isActive":true},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["public struct ATNotification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    @DateFormatting public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown above, the "},{"type":"codeVoice","code":"records"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"s"},{"text":" ","type":"text"},{"type":"text","text":"within the dictionary of "},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","type":"reference"},{"text":"  can be used to potentially","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"decode and encode the JSON object."}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","title":"ATProtoKit","role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","title":"ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ATRecordProtocol","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","kind":"symbol"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"atprotokit_logo.png":{"type":"image","alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":" : any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}],"title":"recordRegistry","kind":"symbol","abstract":[{"text":"The registry itself.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","role":"symbol","abstract":[{"type":"text","text":"Represents an unknown type."}],"title":"UnknownType.unknown(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"text":"([","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"])"}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","abstract":[{"type":"text","text":"Represents a decoded "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"text":"-conforming ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","kind":"symbol","type":"topic","title":"UnknownType.record(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"record"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")","kind":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/init(from:)":{"url":"\/documentation\/atprotokit\/unknowntype\/init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"symbol","title":"init(from:)","role":"symbol","abstract":[{"text":"Initializes ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" by attempting to decode a known record type or falling back"},{"text":" ","type":"text"},{"text":"to a raw dictionary.","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/encode(to:)":{"abstract":[{"type":"text","text":"Encodes this instance into the given encoder."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"encode","kind":"identifier"},{"kind":"text","text":"("},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7EncoderP","kind":"typeIdentifier","text":"Encoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/atprotokit\/unknowntype\/encode(to:)","title":"encode(to:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/encode(to:)","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/ATNotification":{"abstract":[{"text":"A data model definition for a notification.","type":"text"}],"type":"topic","title":"ATNotification","url":"\/documentation\/atprotokit\/atnotification","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ATNotification"}],"navigatorTitle":[{"kind":"identifier","text":"ATNotification"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATNotification"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"url":"\/documentation\/atprotokit\/unknowntype","type":"topic","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"kind":"symbol","title":"UnknownType","role":"symbol","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}]}}}