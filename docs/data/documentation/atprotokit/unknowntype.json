{"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"],"title":"UnknownType","generated":true}],"topicSections":[{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"],"title":"Instance Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"type":"text","text":" "},{"text":"representation.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Within the "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"text":"-conforming ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":", any properties that are of type"},{"type":"text","text":" "},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" as dictated by the lexicon the "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"conforms to "},{"type":"emphasis","inlineContent":[{"text":"must","type":"text"}]},{"text":" of this type. For example,","type":"text"},{"text":" ","type":"text"},{"text":"hereâ€™s the basic structure for ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","isActive":true},{"text":":","type":"text"}]},{"code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    @DateFormatting public var indexedAt: Date","    public let labels: [Label]?","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"As shown above, the "},{"code":"records","type":"codeVoice"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"text":"s","type":"text"},{"type":"text","text":" "},{"text":"within the dictionary of ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","isActive":true,"type":"reference"},{"type":"text","text":"  can be used to potentially"},{"type":"text","text":" "},{"text":"decode and encode the JSON object.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"metadata":{"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"externalID":"s:10ATProtoKit11UnknownTypeO","title":"UnknownType","roleHeading":"Enumeration","modules":[{"name":"ATProtoKit"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L208"}},"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"kind":"symbol","role":"symbol","title":"UnknownType.record(_:)","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"record"},{"text":"(any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Represents a decoded ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference","isActive":true},{"text":"-conforming ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":".","type":"text"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype","kind":"symbol","role":"symbol","title":"UnknownType","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"type":"topic","title":"recordRegistry","kind":"symbol","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","abstract":[{"type":"text","text":"The registry itself."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":" : any "},{"text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","kind":"typeIdentifier"},{"kind":"text","text":".Type]"}]},"doc://ATProtoKit/SE":{"type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE","title":"Swift.Encodable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unknown"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"title":"UnknownType.unknown(_:)","abstract":[{"type":"text","text":"Represents an unknown type."}],"kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol","role":"symbol","title":"ATRecordProtocol","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","role":"collectionGroup","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","type":"topic","title":"Encodable Implementations","abstract":[],"kind":"article"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","identifier":"atprotokit_logo.png","type":"image","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}]},"doc://ATProtoKit/documentation/ATProtoKit":{"url":"\/documentation\/atprotokit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","kind":"symbol","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"role":"collection"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"title":"getRecord(ofType:)","type":"topic","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","abstract":[{"text":"Attempts to retrieve a record of the specified type from an ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"text":" instance.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://ATProtoKit/Se":{"identifier":"doc:\/\/ATProtoKit\/Se","title":"Swift.Decodable","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"title":"AppBskyLexicon.Notification.Notification","url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","navigatorTitle":[{"text":"Notification","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Notification"}],"abstract":[{"type":"text","text":"A data model definition for a notification."}]},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"type":"topic","title":"Retrieving Records with getRecord()","kind":"article","url":"\/documentation\/atprotokit\/getrecordtutorial","abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","role":"article"}}}