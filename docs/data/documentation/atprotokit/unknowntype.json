{"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"externalID":"s:10ATProtoKit11UnknownTypeO","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L208","fileName":"ATRecordProtocol.swift"},"roleHeading":"Enumeration","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"modules":[{"name":"ATProtoKit"}],"title":"UnknownType","role":"symbol","symbolKind":"enum"},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"]}],"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"],"generated":true}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This supports either the instantiation of registered record types or fallback to a dictionary"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Within the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"text":"-conforming ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"type":"text","text":" "},{"code":"unknown","type":"codeVoice"},{"text":" as dictated by the lexicon the ","type":"text"},{"type":"codeVoice","code":"struct"},{"text":"conforms to ","type":"text"},{"inlineContent":[{"text":"must","type":"text"}],"type":"emphasis"},{"text":" of this type. For example,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"hereâ€™s the basic structure for "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","isActive":true,"type":"reference"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    @DateFormatting public var indexedAt: Date","    public let labels: [Label]?","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown above, the "},{"code":"records","type":"codeVoice"},{"text":" property is of type ","type":"text"},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"type":"text","text":"s"},{"type":"text","text":" "},{"type":"text","text":"within the dictionary of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry"},{"type":"text","text":"  can be used to potentially"},{"type":"text","text":" "},{"type":"text","text":"decode and encode the JSON object."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"navigatorTitle":[{"kind":"identifier","text":"Notification"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","title":"AppBskyLexicon.Notification.Notification","abstract":[{"type":"text","text":"A data model definition for a notification."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Notification","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"abstract":[],"url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","title":"Encodable Implementations","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","role":"collectionGroup","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit":{"abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","type":"topic","kind":"symbol","role":"collection","title":"ATProtoKit","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"url":"\/documentation\/atprotokit"},"doc://ATProtoKit/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/atprotokit\/atrecordprotocol","title":"ATRecordProtocol","abstract":[{"text":"The common interface for record structs in the AT Protocol.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ATRecordProtocol"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"url":"\/documentation\/atprotokit\/unknowntype","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"title":"UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","kind":"symbol","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"kind":"article","url":"\/documentation\/atprotokit\/getrecordtutorial","abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"title":"Retrieving Records with getRecord()","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","type":"topic","role":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRecord"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"text":" instance.","type":"text"}],"title":"getRecord(ofType:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":"])"}],"title":"UnknownType.unknown(_:)","abstract":[{"type":"text","text":"Represents an unknown type."}],"role":"symbol","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"recordRegistry","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP","text":"ATRecordProtocol"},{"text":".Type]","kind":"text"}],"url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","type":"topic","kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","title":"recordRegistry","role":"symbol","abstract":[{"type":"text","text":"The registry itself."}]},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"abstract":[{"text":"Represents a decoded ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"text":"-conforming ","type":"text"},{"code":"struct","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","title":"UnknownType.record(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"record","kind":"identifier"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","identifier":"atprotokit_logo.png"}}}