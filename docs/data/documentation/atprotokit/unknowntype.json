{"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UnknownType"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This supports either the instantiation of registered record types or fallback to a dictionary"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Within the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"reference"},{"text":"-conforming ","type":"text"},{"code":"struct","type":"codeVoice"},{"text":", any properties that are of type","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"unknown"},{"type":"text","text":" as dictated by the lexicon the "},{"code":"struct","type":"codeVoice"},{"text":"conforms to ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" of this type. For example,"},{"text":" ","type":"text"},{"type":"text","text":"hereâ€™s the basic structure for "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","type":"reference","isActive":true},{"type":"text","text":":"}]},{"code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    @DateFormatting public var indexedAt: Date","    public let labels: [Label]?","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown above, the "},{"type":"codeVoice","code":"records"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"code":"struct","type":"codeVoice"},{"text":"s","type":"text"},{"type":"text","text":" "},{"text":"within the dictionary of ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","isActive":true},{"type":"text","text":"  can be used to potentially"},{"type":"text","text":" "},{"type":"text","text":"decode and encode the JSON object."}]}]}],"kind":"symbol","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"]}],"metadata":{"modules":[{"name":"ATProtoKit"}],"symbolKind":"enum","roleHeading":"Enumeration","title":"UnknownType","externalID":"s:10ATProtoKit11UnknownTypeO","navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"remoteSource":{"fileName":"ATRecordProtocol.swift","url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L156"},"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/atprotokit\/unknowntype"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","kind":"symbol","url":"\/documentation\/atprotokit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"type":"topic","title":"ATProtoKit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}]},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/Se"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","type":"unresolvable","identifier":"doc:\/\/ATProtoKit\/SE"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"recordRegistry"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ATRecordProtocol","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":".Type]","kind":"text"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry","abstract":[{"text":"The registry itself.","type":"text"}],"type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","title":"recordRegistry","role":"symbol","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"role":"symbol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/atprotokit\/atrecordprotocol","title":"ATRecordProtocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","type":"topic"},"atprotokit_logo.png":{"variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"identifier":"atprotokit_logo.png","alt":"A technology icon representing the ATProtoKit framework.","type":"image"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Notification","kind":"identifier"}],"url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","kind":"symbol","type":"topic","title":"AppBskyLexicon.Notification.Notification","navigatorTitle":[{"kind":"identifier","text":"Notification"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","abstract":[{"type":"text","text":"A data model definition for a notification."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"type":"topic","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"title":"UnknownType","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"role":"symbol","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"type":"topic","role":"symbol","title":"UnknownType.unknown(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"abstract":[{"type":"text","text":"Represents an unknown type."}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"record","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","role":"symbol","abstract":[{"text":"Represents a decoded ","type":"text"},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"text":"-conforming ","type":"text"},{"type":"codeVoice","code":"struct"},{"type":"text","text":"."}],"title":"UnknownType.record(_:)","url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"title":"Encodable Implementations","url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"}}}