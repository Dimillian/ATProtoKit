{"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations"],"generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/ATProtoKit\/Se","doc:\/\/ATProtoKit\/SE"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"kind":"symbol","metadata":{"modules":[{"name":"ATProtoKit"}],"title":"UnknownType","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"externalID":"s:10ATProtoKit11UnknownTypeO","role":"symbol","roleHeading":"Enumeration","remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L158","fileName":"ATRecordProtocol.swift"},"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"symbolKind":"enum"},"variants":[{"paths":["\/documentation\/atprotokit\/unknowntype"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This supports either the instantiation of registered record types or fallback to a dictionary","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"representation."}]},{"inlineContent":[{"text":"Within the ","type":"text"},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"type":"text","text":", any properties that are of type"},{"text":" ","type":"text"},{"code":"unknown","type":"codeVoice"},{"type":"text","text":" as dictated by the lexicon the "},{"code":"struct","type":"codeVoice"},{"text":"conforms to ","type":"text"},{"inlineContent":[{"type":"text","text":"must"}],"type":"emphasis"},{"text":" of this type. For example,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"hereâ€™s the basic structure for "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","isActive":true},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["public struct Notification: Codable {","    public let notificationURI: String","    public let notificationCID: String","    public let notificationAuthor: String","    public let notificationReason: Reason","    public let reasonSubjectURI: String?","    public let record: UnknownType \/\/ Records will be stored here.","    public let isRead: Bool","    @DateFormatting public var indexedAt: Date","    public let labels: [Label]?","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown above, the "},{"code":"records","type":"codeVoice"},{"type":"text","text":" property is of type "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":". By adding this, any "},{"type":"codeVoice","code":"struct"},{"text":"s","type":"text"},{"type":"text","text":" "},{"text":"within the dictionary of ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry"},{"text":"  can be used to potentially","type":"text"},{"type":"text","text":" "},{"type":"text","text":"decode and encode the JSON object."}]}],"kind":"content"}],"seeAlsoSections":[{"generated":true,"title":"UnknownType","identifiers":["doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://ATProtoKit/documentation/ATProtoKit":{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","images":[{"identifier":"atprotokit_logo.png","type":"icon"}],"role":"collection","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"url":"\/documentation\/atprotokit","type":"topic","kind":"symbol","title":"ATProtoKit"},"doc://ATProtoKit/documentation/ATProtoKit/AppBskyLexicon/Notification/Notification":{"navigatorTitle":[{"text":"Notification","kind":"identifier"}],"abstract":[{"text":"A data model definition for a notification.","type":"text"}],"title":"AppBskyLexicon.Notification.Notification","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Notification","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/AppBskyLexicon\/Notification\/Notification","url":"\/documentation\/atprotokit\/appbskylexicon\/notification\/notification","role":"symbol","type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/record(_:)":{"title":"UnknownType.record(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"record","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Represents a decoded "},{"type":"reference","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true},{"type":"text","text":"-conforming "},{"type":"codeVoice","code":"struct"},{"text":".","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/record(_:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/record(_:)"},"doc://ATProtoKit/SE":{"title":"Swift.Encodable","identifier":"doc:\/\/ATProtoKit\/SE","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/getRecordTutorial":{"kind":"article","url":"\/documentation\/atprotokit\/getrecordtutorial","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/getRecordTutorial","title":"Retrieving Records with getRecord()","type":"topic","abstract":[{"text":"Get records easily without explicit pattern matching in only one line.","type":"text"}],"role":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/Encodable-Implementations":{"url":"\/documentation\/atprotokit\/unknowntype\/encodable-implementations","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/Encodable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"Encodable Implementations","kind":"article"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/unknown(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"])","kind":"text"}],"title":"UnknownType.unknown(_:)","url":"\/documentation\/atprotokit\/unknowntype\/unknown(_:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/unknown(_:)","role":"symbol","abstract":[{"type":"text","text":"Represents an unknown type."}],"type":"topic"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"kind":"symbol","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnknownType","kind":"identifier"}],"url":"\/documentation\/atprotokit\/unknowntype","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"title":"UnknownType"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"navigatorTitle":[{"kind":"identifier","text":"ATRecordProtocol"}],"type":"topic","title":"ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordTypeRegistry/recordRegistry":{"type":"topic","url":"\/documentation\/atprotokit\/atrecordtyperegistry\/recordregistry","title":"recordRegistry","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"recordRegistry","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":" : any ","kind":"text"},{"text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"},{"kind":"text","text":".Type]"}],"abstract":[{"text":"The registry itself.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordTypeRegistry\/recordRegistry"},"doc://ATProtoKit/Se":{"title":"Swift.Decodable","identifier":"doc:\/\/ATProtoKit\/Se","type":"unresolvable"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"ofType","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"getRecord(ofType:)","abstract":[{"text":"Attempts to retrieve a record of the specified type from an ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"text":" instance.","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","role":"symbol","kind":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","variants":[{"url":"\/images\/atprotokit_logo.png","traits":["1x","light"]}],"type":"image","alt":"A technology icon representing the ATProtoKit framework."}}}