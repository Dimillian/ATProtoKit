{"variants":[{"paths":["\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"text":" instance.","type":"text"}],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRecord"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"ofType"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"remoteSource":{"url":"https:\/\/github.com\/MasterJ93\/ATProtoKit\/tree\/main\/Sources\/ATProtoKit\/Utilities\/ATRecordProtocol.swift#L213","fileName":"ATRecordProtocol.swift"},"roleHeading":"Instance Method","title":"getRecord(ofType:)","externalID":"s:10ATProtoKit11UnknownTypeO9getRecord02ofD0xSgxm_tAA16ATRecordProtocolRzlF","role":"symbol","symbolKind":"method","modules":[{"name":"ATProtoKit"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRecord"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"ofType","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"? ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","text":"ATRecordProtocol","kind":"typeIdentifier","preciseIdentifier":"s:10ATProtoKit16ATRecordProtocolP"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"An "},{"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","isActive":true,"type":"reference"},{"type":"text","text":"-conforming type."}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"An instance of the specified record type if the "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" contains a record"},{"text":" ","type":"text"},{"text":"of that type.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is a convience method that handles the case checks. By using this, you can reference","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a specific property within a record with just one line."}]}],"kind":"content"}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/getRecord(ofType:)":{"type":"topic","url":"\/documentation\/atprotokit\/unknowntype\/getrecord(oftype:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"getRecord","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"ofType"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"Attempts to retrieve a record of the specified type from an "},{"type":"codeVoice","code":"UnknownType"},{"text":" instance.","type":"text"}],"title":"getRecord(ofType:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/getRecord(ofType:)","role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"abstract":[{"text":"Handles decoding and encoding of records when their type is not known ahead of type.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","kind":"symbol","url":"\/documentation\/atprotokit\/unknowntype","title":"UnknownType","navigatorTitle":[{"text":"UnknownType","kind":"identifier"}]},"atprotokit_logo.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png"},"doc://ATProtoKit/documentation/ATProtoKit/ATRecordProtocol":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ATRecordProtocol","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/ATRecordProtocol","url":"\/documentation\/atprotokit\/atrecordprotocol","navigatorTitle":[{"text":"ATRecordProtocol","kind":"identifier"}],"type":"topic","title":"ATRecordProtocol","abstract":[{"type":"text","text":"The common interface for record structs in the AT Protocol."}],"role":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit":{"kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"type":"topic","url":"\/documentation\/atprotokit","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit","abstract":[{"text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky.","type":"text"}],"role":"collection"}}}