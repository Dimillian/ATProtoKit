{"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"text":"Initializes ","type":"text"},{"code":"UnknownType","type":"codeVoice"},{"type":"text","text":" by attempting to decode a known record type or falling back"},{"type":"text","text":" "},{"type":"text","text":"to a raw dictionary."}],"metadata":{"symbolKind":"init","role":"symbol","title":"init(from:)","externalID":"s:10ATProtoKit11UnknownTypeO4fromACs7Decoder_p_tKcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"modules":[{"name":"ATProtoKit"}],"roleHeading":"Initializer"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"decoder","content":[{"inlineContent":[{"type":"text","text":"The decoder to read data from."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"(Inherited from "},{"type":"codeVoice","code":"Decoder"},{"type":"text","text":".)"}],"type":"paragraph"},{"name":"Throws","content":[{"inlineContent":[{"text":"an error can occur if the following happens:","type":"text"},{"type":"text","text":"\n"},{"type":"text","text":"- reading from the decoder fails"},{"type":"text","text":"\n"},{"type":"text","text":"- the data read is corrupted or otherwise invalid"},{"type":"text","text":"\n"},{"text":"- the decoder is unable to find the ","type":"text"},{"type":"codeVoice","code":"$type"},{"text":" property","type":"text"},{"type":"text","text":"\n"},{"text":"- the JSON object is invalid","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/init(from:)"]}],"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"navigatorTitle":[{"text":"UnknownType","kind":"identifier"}],"role":"symbol","url":"\/documentation\/atprotokit\/unknowntype","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","title":"UnknownType","abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"type":"topic","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnknownType","kind":"identifier"}]},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/init(from:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"kind":"symbol","type":"topic","title":"init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)","role":"symbol","abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"UnknownType"},{"text":" by attempting to decode a known record type or falling back","type":"text"},{"text":" ","type":"text"},{"text":"to a raw dictionary.","type":"text"}],"url":"\/documentation\/atprotokit\/unknowntype\/init(from:)"},"atprotokit_logo.png":{"alt":"A technology icon representing the ATProtoKit framework.","type":"image","identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}]},"doc://ATProtoKit/documentation/ATProtoKit":{"images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"title":"ATProtoKit","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"role":"collection","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","url":"\/documentation\/atprotokit","type":"topic","kind":"symbol"}}}