{"abstract":[{"type":"text","text":"Initializes "},{"type":"codeVoice","code":"UnknownType"},{"type":"text","text":" by attempting to decode a known record type or falling back"},{"type":"text","text":" "},{"type":"text","text":"to a raw dictionary."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decoder"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}],"name":"decoder"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"(Inherited from ","type":"text"},{"code":"Decoder","type":"codeVoice"},{"type":"text","text":".)"}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"an error can occur if the following happens:","type":"text"},{"text":"\n","type":"text"},{"text":"- reading from the decoder fails","type":"text"},{"type":"text","text":"\n"},{"text":"- the data read is corrupted or otherwise invalid","type":"text"},{"type":"text","text":"\n"},{"text":"- the decoder is unable to find the ","type":"text"},{"type":"codeVoice","code":"$type"},{"type":"text","text":" property"},{"type":"text","text":"\n"},{"type":"text","text":"- the JSON object is invalid"}]}],"name":"Throws","type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atprotokit\/unknowntype\/init(from:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ATProtoKit\/documentation\/ATProtoKit","doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType"]]},"identifier":{"url":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:s7DecoderP","text":"Decoder","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"modules":[{"name":"ATProtoKit"}],"externalID":"s:10ATProtoKit11UnknownTypeO4fromACs7Decoder_p_tKcfc","role":"symbol","symbolKind":"init","title":"init(from:)"},"references":{"doc://ATProtoKit/documentation/ATProtoKit/UnknownType/init(from:)":{"abstract":[{"type":"text","text":"Initializes "},{"code":"UnknownType","type":"codeVoice"},{"text":" by attempting to decode a known record type or falling back","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to a raw dictionary."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/atprotokit\/unknowntype\/init(from:)","type":"topic","title":"init(from:)","identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType\/init(from:)","kind":"symbol"},"doc://ATProtoKit/documentation/ATProtoKit/UnknownType":{"navigatorTitle":[{"kind":"identifier","text":"UnknownType"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit\/UnknownType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnknownType"}],"abstract":[{"type":"text","text":"Handles decoding and encoding of records when their type is not known ahead of type."}],"kind":"symbol","title":"UnknownType","type":"topic","url":"\/documentation\/atprotokit\/unknowntype","role":"symbol"},"atprotokit_logo.png":{"identifier":"atprotokit_logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/atprotokit_logo.png"}],"type":"image","alt":"A technology icon representing the ATProtoKit framework."},"doc://ATProtoKit/documentation/ATProtoKit":{"type":"topic","url":"\/documentation\/atprotokit","role":"collection","abstract":[{"type":"text","text":"Develop and manage client and server-side applications for the AT Protocol and Bluesky."}],"kind":"symbol","images":[{"type":"icon","identifier":"atprotokit_logo.png"}],"identifier":"doc:\/\/ATProtoKit\/documentation\/ATProtoKit","title":"ATProtoKit"}}}